DWAPlannerROS:

# Robot Configuration Parameters
  max_vel_x: 2.5    # The maximum x velocity for the robot in m/s.   

  min_vel_x: -2.5   # if zero or positive value it would not rotate in a good way if it located in narrow place
                       # The minimum x velocity for the robot in m/s, negative for backwards motion.  
  max_vel_y: 2.0
  min_vel_y: -2.0
  meter_scoring : true

# The velocity when robot is moving in a straight line
  max_vel_trans:  2.8       # The absolute value of the maximum translational velocity for the robot in m/s  
  min_vel_trans:  0.0       # The absolute value of the minimum translational velocity for the robot in m/s

  max_vel_theta: 1.0        # The absolute value of the maximum rotational velocity for the robot in rad/s
  min_vel_theta: 0.0        # The absolute value of the minimum rotational velocity for the robot in rad/s

  acc_lim_x: 2.0            
  acc_lim_y: 2.0 
  acc_lim_theta: 4.0        

# Goal Tolerance Parameters
  xy_goal_tolerance: 0.2   
  yaw_goal_tolerance: 0.8  
  latch_xy_goal_tolerance: false

# Forward Simulation Parameters
  sim_time: 2.0   # DWA is only simulating trajectories that the robot could follow for the next T second.
  vx_samples: 20  
  vy_samples: 0
  vth_samples: 40 

  controller_frequency: 20.0 

# Trajectory Scoring Parameters
  # cost = path_distance_bias + goal_distance_bias + occdist_scale  ( The objective to get the lowest cost )

  path_distance_bias: 32.0  ## was 45.0    # The weight for how much the local planner should stay close to the global path
                                           # A high value will make the local planner stick more to the global path

  goal_distance_bias: 20.0  # was 24.0    # The weight of how much the robot should attempt to reach the local goal , with whatever the path
                                          # Experiments show that increasing this parameter enables the robot to be less attached to the global path
                                          # and give more advantage or preferences to trajectories that converge faster to the goal
                                         

  occdist_scale: 0.02                   # The weight of how much the robot should attempt to avoid obstacles 
                                        # A high value for this parameter results in avoiding obstacles at high rates
                                        # and make an indecisive robot that stucks in place
 
  forward_point_distance: 0.095
  stop_time_buffer: 0.2
  scaling_speed: 0.25
  max_scaling_factor: 0.2

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05
  oscillation_timeout: 60.0

# Debugging
  publish_traj_pc : true      
  publish_cost_grid_pc: true  


  # Warning!
  #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.
